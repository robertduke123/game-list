{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\robdu\\\\Desktop\\\\port\\\\game-list\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport Search from './components/Search';\nimport Main from './components/Main';\nimport Graph from './components/Graph';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './App.css';\nimport games from './games';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass App extends Component {\n  constructor() {\n    super();\n    this.onChange = e => {\n      this.setState({\n        search: e.target.value\n      });\n    };\n    this.onSearch = () => {\n      const item = this.state.search;\n      if (!this.state.log.includes(item)) {\n        if (this.state.search.length > 0) {\n          if (this.state.log.length > 0) {\n            this.setState(prevState => ({\n              log: [...prevState.log, item],\n              personalList: {\n                ...prevState.personalList,\n                [this.state.log.length]: {\n                  name: item,\n                  completion: ''\n                }\n              }\n            }));\n          } else {\n            this.setState({\n              log: [item]\n            });\n            this.setState({\n              personalList: {\n                0: {\n                  name: item,\n                  completion: ''\n                }\n              }\n            });\n          }\n        }\n      }\n      this.setState({\n        search: ''\n      });\n      document.querySelector('#search').value = '';\n      console.log(this.state.log);\n    };\n    this.graphSeg = () => {\n      let amount = this.state.graphSeg.started + this.state.graphSeg.finish + this.state.graphSeg.complete;\n      let startPerc = this.state.graphSeg.started / amount * 100;\n      let completePerc = 100 - this.state.graphSeg.complete / amount * 100;\n      this.setState({\n        background: {\n          background: `linear-gradient(to right, rgba(34,193,195,1) ${startPerc}%, rgba(171,215,77,1) ${startPerc}%, rgba(171,215,77,1) ${completePerc}% ,rgba(253,187,45,1) ${completePerc}%)`\n        }\n      });\n    };\n    this.createGraph = () => {\n      let log = this.state.log;\n      this.setState({\n        graphSeg: {\n          started: 0,\n          finish: 0,\n          complete: 0\n        }\n      });\n      log.forEach(item => {\n        let number = this.state.log.indexOf(item);\n        let completion = this.state.personalList[number].completion;\n        completion === 'started' ? this.setState(prevState => ({\n          graphSeg: {\n            ...prevState.graphSeg,\n            started: prevState.graphSeg.started + 1\n          }\n        }), this.graphSeg()) : completion === 'finish' ? this.setState(prevState => ({\n          graphSeg: {\n            ...prevState.graphSeg,\n            finish: prevState.graphSeg.finish + 1\n          }\n        }), this.graphSeg()) : completion === 'complete' ? this.setState(prevState => ({\n          graphSeg: {\n            ...prevState.graphSeg,\n            complete: prevState.graphSeg.complete + 1\n          }\n        }), this.graphSeg()) : console.log('none');\n      });\n      let amount = this.state.graphSeg.started + this.state.graphSeg.finish + this.state.graphSeg.complete;\n      let startPerc = this.state.graphSeg.started / amount * 100;\n      let completePerc = 100 - this.state.graphSeg.complete / amount * 100;\n      this.setState({\n        background: {\n          background: `linear-gradient(to right, rgba(34,193,195,1) ${startPerc}%, rgba(171,215,77,1) ${startPerc}%, rgba(171,215,77,1) ${completePerc}% ,rgba(253,187,45,1) ${completePerc}%)`\n        }\n      });\n      console.log(this.state.background);\n    };\n    this.onActive = (e, ver) => {\n      let name = e.target.parentNode.previousSibling.innerText;\n      let number = this.state.log.indexOf(name);\n      if (ver === 'one') {\n        this.setState(prevState => ({\n          personalList: {\n            ...prevState.personalList,\n            [number]: {\n              name: name,\n              completion: 'started'\n            }\n          }\n        }), this.createGraph());\n      } else if (ver === 'two') {\n        this.setState(prevState => ({\n          personalList: {\n            ...prevState.personalList,\n            [number]: {\n              name: name,\n              completion: 'finish'\n            }\n          }\n        }), this.createGraph());\n      } else if (ver === 'three') {\n        this.setState(prevState => ({\n          personalList: {\n            ...prevState.personalList,\n            [number]: {\n              name: name,\n              completion: 'complete'\n            }\n          }\n        }), this.createGraph());\n      }\n      console.log(this.state.personalList);\n    };\n    this.state = {\n      games: games,\n      search: '',\n      log: [],\n      personalList: {},\n      graphSeg: {},\n      background: ''\n    };\n  }\n  // componentDidMount() {\n  //   fetch('https://id.twitch.tv/oauth2/token?client_id=oqk1xu4awy8nnm5abfxr8ap86lj1pt&client_secret=ir0i9tsgk0xzobbbngirr1ve0x3xva&grant_type=client_credentials', {method: 'post'})\n  //       .then(res => res.json())\n  //       .then(data => {\n  //         this.setState({authorization: data.access_token})\n  //       })\n\n  //   fetch('https://api.igdb.com/v4/games', {\n  //             method: 'post',\n  //             mode: 'no-cors',\n  //             header: { 'Client ID' : this.state.clientId,\n  //                       'Authorization' : `Bearer ${this.state.authorization}`},\n  //             body: ''\n  //           })\n  //           .then(response => response.json())\n  //           .then(data => console.log(data))    \n  // }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Search, {\n        onChange: this.onChange,\n        onSearch: this.onSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Main, {\n        pers: this.state.personalList,\n        onActive: this.onActive,\n        items: this.state.log\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Graph, {\n        graphSeg: this.state.background\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["React","Component","Search","Main","Graph","games","jsxDEV","_jsxDEV","App","constructor","onChange","e","setState","search","target","value","onSearch","item","state","log","includes","length","prevState","personalList","name","completion","document","querySelector","console","graphSeg","amount","started","finish","complete","startPerc","completePerc","background","createGraph","forEach","number","indexOf","onActive","ver","parentNode","previousSibling","innerText","render","className","children","fileName","_jsxFileName","lineNumber","columnNumber","pers","items"],"sources":["C:/Users/robdu/Desktop/port/game-list/src/App.js"],"sourcesContent":["import React, { Component } from 'react';\nimport Search from './components/Search';\nimport Main from './components/Main';\nimport Graph from './components/Graph';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './App.css';\nimport games from './games'\n\n\n\nclass App extends Component {\n  constructor() {\n    super()\n    this.state = { \n    games : games,\n    search: '',\n    log: [],\n    personalList: {},\n    graphSeg: {\n    },\n    background : ''    \n   } \n  }\n\n   onChange = (e) => {\n    this.setState({search: e.target.value})\n   }\n\n   onSearch = () => {\n      const item = this.state.search\n      if( !this.state.log.includes(item)) {\n          if(this.state.search.length > 0) {\n          if(this.state.log.length > 0) {\n            this.setState(prevState => ({\n              log: [...prevState.log, item],\n              personalList: {...prevState.personalList,\n                 [this.state.log.length] : {\n                  name: item, \n                  completion: ''\n                }}\n            }))\n          } else {\n            this.setState({log: [item]})\n            this.setState({personalList: {0 : {\n              name: item, \n              completion: ''\n            }}})\n          }  \n        }      \n      }\n                \n      this.setState({search: ''})\n      document.querySelector('#search').value = ''\n      console.log(this.state.log);      \n    }\n\n    graphSeg = () => {\n      let amount = this.state.graphSeg.started + this.state.graphSeg.finish + this.state.graphSeg.complete\n      let startPerc = (this.state.graphSeg.started / amount) * 100\n      let completePerc = 100 - ((this.state.graphSeg.complete / amount) * 100)\n        \n      this.setState({background: {background: `linear-gradient(to right, rgba(34,193,195,1) ${startPerc}%, rgba(171,215,77,1) ${startPerc}%, rgba(171,215,77,1) ${completePerc}% ,rgba(253,187,45,1) ${completePerc}%)`}})       \n    }\n\n    createGraph = () => {\n    let log = this.state.log\n    this.setState({graphSeg: {\n          started: 0,\n          finish: 0,\n          complete: 0\n        }    \n        })\n\n    log.forEach(item => { \n\n      let number = this.state.log.indexOf(item)\n      let completion = this.state.personalList[number].completion\n\n      completion === 'started' ? this.setState(prevState => ({graphSeg : { ...prevState.graphSeg, started: prevState.graphSeg.started + 1}}), this.graphSeg()) : \n        completion === 'finish' ? this.setState(prevState => ({graphSeg : { ...prevState.graphSeg, finish: prevState.graphSeg.finish + 1}}), this.graphSeg()) :\n          completion === 'complete' ? this.setState(prevState => ({graphSeg : { ...prevState.graphSeg, complete: prevState.graphSeg.complete + 1}}), this.graphSeg()) :\n          console.log('none');\n \n    })\n    let amount = this.state.graphSeg.started + this.state.graphSeg.finish + this.state.graphSeg.complete\n      let startPerc = (this.state.graphSeg.started / amount) * 100\n      let completePerc = 100 - ((this.state.graphSeg.complete / amount) * 100)\n        \n      this.setState({background: {background: `linear-gradient(to right, rgba(34,193,195,1) ${startPerc}%, rgba(171,215,77,1) ${startPerc}%, rgba(171,215,77,1) ${completePerc}% ,rgba(253,187,45,1) ${completePerc}%)`}})  \n      console.log(this.state.background);\n  }\n    \n  \n    onActive = (e, ver) => {\n\n    let name = e.target.parentNode.previousSibling.innerText\n    let number = this.state.log.indexOf(name)\n\n    if(ver === 'one') {            \n      this.setState(prevState => ({\n      personalList : {\n        ...prevState.personalList,\n        [number] : {\n          name: name,\n          completion: 'started'\n        }\n      }\n    }), this.createGraph())\n\n    } else if (ver === 'two') {      \n      this.setState(prevState => ({\n      personalList : {\n        ...prevState.personalList,\n        [number] : {\n          name: name,\n          completion: 'finish'\n        }\n      }\n    }), this.createGraph())\n\n    } else if (ver === 'three') {        \n        this.setState(prevState => ({\n      personalList : {\n        ...prevState.personalList,\n        [number] : {\n          name: name,\n          completion: 'complete'\n        }\n      }\n    }), this.createGraph())\n    }      \n    console.log(this.state.personalList)\n  }\n\n   \n\n  \n    \n\n  // componentDidMount() {\n  //   fetch('https://id.twitch.tv/oauth2/token?client_id=oqk1xu4awy8nnm5abfxr8ap86lj1pt&client_secret=ir0i9tsgk0xzobbbngirr1ve0x3xva&grant_type=client_credentials', {method: 'post'})\n  //       .then(res => res.json())\n  //       .then(data => {\n  //         this.setState({authorization: data.access_token})\n  //       })\n\n  //   fetch('https://api.igdb.com/v4/games', {\n  //             method: 'post',\n  //             mode: 'no-cors',\n  //             header: { 'Client ID' : this.state.clientId,\n  //                       'Authorization' : `Bearer ${this.state.authorization}`},\n  //             body: ''\n  //           })\n  //           .then(response => response.json())\n  //           .then(data => console.log(data))    \n  // }\n\n\n    \n\n  render() { \n    return (\n      <div className='App'>\n        <Search onChange={this.onChange} onSearch={this.onSearch}/>\n        <Main pers={this.state.personalList} onActive={this.onActive} items={this.state.log}/>\n        <Graph graphSeg={this.state.background} />\n      </div>\n\n    );\n  }\n}\n \nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}