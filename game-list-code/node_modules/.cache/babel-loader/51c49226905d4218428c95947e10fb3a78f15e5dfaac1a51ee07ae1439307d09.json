{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\robdu\\\\Desktop\\\\port\\\\game-list\\\\src\\\\components\\\\Graph.jsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Graph(_ref) {\n  let {\n    graphSeg,\n    log\n  } = _ref;\n  function createGraph() {\n    let amount = graphSeg.started + graphSeg.finish + graphSeg.complete;\n    let startPerc = graphSeg.started / amount * 100;\n    let completePerc = 100 - graphSeg.complete / amount * 100;\n    let circStart = graphSeg.started / amount * 360;\n    let circFIn = graphSeg.finish / amount * 360 + circStart;\n    // let circComp = (graphSeg.complete / amount) * 360\n\n    console.log(circStart, circFIn);\n\n    // return {background: `conic-gradient(rgb(248, 50, 208) ${circStart}deg, rgb(75, 192, 255) ${circStart}deg ${circFIn} deg,rgb(47, 255, 82) ${circFIn}deg)`}\n    return {\n      background: `linear-gradient(to right, rgb(248, 50, 208) ${startPerc}%, rgb(75, 192, 255) ${startPerc}%, rgb(75, 192, 255) ${completePerc}% ,rgb(47, 255, 82) ${completePerc}%)`\n    };\n  }\n  function createLines() {\n    log.forEach(item => {\n      let number = log.indexOf(item);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"line\",\n        children: \"number\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this);\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"graph-cont\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"graph\",\n      style: createGraph(),\n      children: createLines()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n}\n_c = Graph;\nvar _c;\n$RefreshReg$(_c, \"Graph\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Graph","_ref","graphSeg","log","createGraph","amount","started","finish","complete","startPerc","completePerc","circStart","circFIn","console","background","createLines","forEach","item","number","indexOf","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","_c","$RefreshReg$"],"sources":["C:/Users/robdu/Desktop/port/game-list/src/components/Graph.jsx"],"sourcesContent":["import React from 'react';\r\n\r\nexport default function Graph({graphSeg, log}) {\r\n    function createGraph() {\r\n        let amount = graphSeg.started + graphSeg.finish + graphSeg.complete\r\n        let startPerc = (graphSeg.started / amount) * 100\r\n        let completePerc = 100 - ((graphSeg.complete / amount) * 100)\r\n\r\n        let circStart = (graphSeg.started / amount) * 360\r\n        let circFIn = ((graphSeg.finish / amount) * 360) + circStart\r\n        // let circComp = (graphSeg.complete / amount) * 360\r\n        \r\n       console.log(circStart, circFIn);\r\n\r\n\r\n        // return {background: `conic-gradient(rgb(248, 50, 208) ${circStart}deg, rgb(75, 192, 255) ${circStart}deg ${circFIn} deg,rgb(47, 255, 82) ${circFIn}deg)`}\r\n        return {background: `linear-gradient(to right, rgb(248, 50, 208) ${startPerc}%, rgb(75, 192, 255) ${startPerc}%, rgb(75, 192, 255) ${completePerc}% ,rgb(47, 255, 82) ${completePerc}%)`}\r\n    }\r\n\r\n    function createLines() {\r\n        log.forEach(item => {\r\n            let number = log.indexOf(item)\r\n\r\n            return(\r\n                <div className='line'>number</div>\r\n            )\r\n        });\r\n    }\r\n\r\n\r\n    return(\r\n        <div className='graph-cont'>\r\n            <div \r\n            className=\"graph\"\r\n            style={createGraph()}\r\n            >\r\n                {createLines()}\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,eAAe,SAASC,KAAKA,CAAAC,IAAA,EAAkB;EAAA,IAAjB;IAACC,QAAQ;IAAEC;EAAG,CAAC,GAAAF,IAAA;EACzC,SAASG,WAAWA,CAAA,EAAG;IACnB,IAAIC,MAAM,GAAGH,QAAQ,CAACI,OAAO,GAAGJ,QAAQ,CAACK,MAAM,GAAGL,QAAQ,CAACM,QAAQ;IACnE,IAAIC,SAAS,GAAIP,QAAQ,CAACI,OAAO,GAAGD,MAAM,GAAI,GAAG;IACjD,IAAIK,YAAY,GAAG,GAAG,GAAKR,QAAQ,CAACM,QAAQ,GAAGH,MAAM,GAAI,GAAI;IAE7D,IAAIM,SAAS,GAAIT,QAAQ,CAACI,OAAO,GAAGD,MAAM,GAAI,GAAG;IACjD,IAAIO,OAAO,GAAKV,QAAQ,CAACK,MAAM,GAAGF,MAAM,GAAI,GAAG,GAAIM,SAAS;IAC5D;;IAEDE,OAAO,CAACV,GAAG,CAACQ,SAAS,EAAEC,OAAO,CAAC;;IAG9B;IACA,OAAO;MAACE,UAAU,EAAG,+CAA8CL,SAAU,wBAAuBA,SAAU,wBAAuBC,YAAa,uBAAsBA,YAAa;IAAG,CAAC;EAC7L;EAEA,SAASK,WAAWA,CAAA,EAAG;IACnBZ,GAAG,CAACa,OAAO,CAACC,IAAI,IAAI;MAChB,IAAIC,MAAM,GAAGf,GAAG,CAACgB,OAAO,CAACF,IAAI,CAAC;MAE9B,oBACIlB,OAAA;QAAKqB,SAAS,EAAC,MAAM;QAAAC,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAE1C,CAAC,CAAC;EACN;EAGA,oBACI1B,OAAA;IAAKqB,SAAS,EAAC,YAAY;IAAAC,QAAA,eACvBtB,OAAA;MACAqB,SAAS,EAAC,OAAO;MACjBM,KAAK,EAAEtB,WAAW,CAAC,CAAE;MAAAiB,QAAA,EAEhBN,WAAW,CAAC;IAAC;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACb;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEL,CAAC;AAEd;AAACE,EAAA,GAvCuB3B,KAAK;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}