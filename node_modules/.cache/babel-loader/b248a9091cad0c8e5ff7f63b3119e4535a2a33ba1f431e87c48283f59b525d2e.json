{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\robdu\\\\Desktop\\\\port\\\\game-list\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport Search from './components/Search';\nimport Main from './components/Main';\nimport Graph from './components/Graph';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './App.css';\nimport games from './games';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass App extends Component {\n  constructor() {\n    super();\n    this.onChange = e => {\n      this.setState({\n        search: e.target.value\n      });\n    };\n    this.onSearch = () => {\n      const item = this.state.search;\n      if (!this.state.log.includes(item)) {\n        if (this.state.search.length > 0) {\n          if (this.state.log.length > 0) {\n            this.setState(prevState => ({\n              log: [...prevState.log, item],\n              personalList: {\n                ...prevState.personalList,\n                [this.state.log.length]: {\n                  name: item,\n                  completion: ''\n                }\n              }\n            }));\n          } else {\n            this.setState({\n              log: [item]\n            });\n            this.setState({\n              personalList: {\n                0: {\n                  name: item,\n                  completion: ''\n                }\n              }\n            });\n          }\n        }\n      }\n      this.setState({\n        search: ''\n      });\n      document.querySelector('#search').value = '';\n      // console.log(this.state.personalList);      \n    };\n    this.onActive = (e, ver) => {\n      let name = e.target.parentNode.previousSibling.innerText;\n      let number = this.state.log.indexOf(name);\n      let currentStart = this.state.graphSeg.started;\n      let currentFinish = this.state.graphSeg.finish;\n      let currentComplete = this.state.graphSeg.complete;\n      if (ver === 'one') {\n        let test = {\n          name: name,\n          completion: 'started'\n        };\n        let test2 = {\n          started: currentStart + 1,\n          finish: currentFinish,\n          complete: currentComplete\n        };\n        this.setState(prevState => ({\n          personalList: {\n            ...prevState.personalList,\n            [number]: {\n              name: name,\n              completion: test.completion\n            }\n          },\n          graphSeg: {\n            started: test2.started,\n            finish: test2.finish,\n            complete: test2.complete\n          }\n        }));\n      } else if (ver === 'two') {\n        this.setState(prevState => ({\n          personalList: {\n            ...prevState.personalList,\n            [number]: {\n              name: name,\n              completion: 'finish'\n            }\n          }\n        }));\n      } else if (ver === 'three') {\n        this.setState(prevState => ({\n          personalList: {\n            ...prevState.personalList,\n            [number]: {\n              name: name,\n              completion: 'complete'\n            }\n          }\n        }));\n      }\n      console.log(this.state.personalList, this.state.graphSeg);\n    };\n    this.state = {\n      games: games,\n      search: '',\n      log: [],\n      personalList: {},\n      graphSeg: {\n        started: 0,\n        finish: 0,\n        complete: 0\n      }\n    };\n  }\n  // createGraph = () => {\n  //   let log = this.state.log\n  //   this.setState({graphSeg: {\n  //         started: 0,\n  //         finish: 0,\n  //         complete: 0\n  //       }    \n  //       })\n\n  //   log.forEach(item => { \n\n  //     let number = this.state.log.indexOf(item)\n  //     let completion = this.state.personalList[number].completion\n\n  //     completion === 'started' ? this.setState(prevState => ({graphSeg : { ...prevState.graphSeg, started: prevState.graphSeg.started + 1}})) : \n  //       completion === 'finish' ? this.setState(prevState => ({graphSeg : { ...prevState.graphSeg, finish: prevState.graphSeg.finish + 1}})) :\n  //         completion === 'complete' ? this.setState(prevState => ({graphSeg : { ...prevState.graphSeg, complete: prevState.graphSeg.complete + 1}})) :\n  //         console.log('none');\n\n  //   })    \n  // }\n\n  // componentDidMount() {\n  //   fetch('https://id.twitch.tv/oauth2/token?client_id=oqk1xu4awy8nnm5abfxr8ap86lj1pt&client_secret=ir0i9tsgk0xzobbbngirr1ve0x3xva&grant_type=client_credentials', {method: 'post'})\n  //       .then(res => res.json())\n  //       .then(data => {\n  //         this.setState({authorization: data.access_token})\n  //       })\n\n  //   fetch('https://api.igdb.com/v4/games', {\n  //             method: 'post',\n  //             mode: 'no-cors',\n  //             header: { 'Client ID' : this.state.clientId,\n  //                       'Authorization' : `Bearer ${this.state.authorization}`},\n  //             body: ''\n  //           })\n  //           .then(response => response.json())\n  //           .then(data => console.log(data))    \n  // }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Search, {\n        onChange: this.onChange,\n        onSearch: this.onSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Main, {\n        pers: this.state.personalList,\n        onActive: this.onActive,\n        createGraph: this.createGraph,\n        items: this.state.log\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Graph, {\n        graphSeg: this.state.graphSeg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["React","Component","Search","Main","Graph","games","jsxDEV","_jsxDEV","App","constructor","onChange","e","setState","search","target","value","onSearch","item","state","log","includes","length","prevState","personalList","name","completion","document","querySelector","onActive","ver","parentNode","previousSibling","innerText","number","indexOf","currentStart","graphSeg","started","currentFinish","finish","currentComplete","complete","test","test2","console","render","className","children","fileName","_jsxFileName","lineNumber","columnNumber","pers","createGraph","items"],"sources":["C:/Users/robdu/Desktop/port/game-list/src/App.js"],"sourcesContent":["import React, { Component } from 'react';\nimport Search from './components/Search';\nimport Main from './components/Main';\nimport Graph from './components/Graph';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './App.css';\nimport games from './games'\n\n\n\nclass App extends Component {\n  constructor() {\n    super()\n    this.state = { \n    games : games,\n    search: '',\n    log: [],\n    personalList: {},\n    graphSeg:{\n      started: 0,\n      finish: 0,\n      complete: 0\n    }    \n   } \n  }\n\n   onChange = (e) => {\n    this.setState({search: e.target.value})\n   }\n\n   onSearch = () => {\n      const item = this.state.search\n      if( !this.state.log.includes(item)) {\n          if(this.state.search.length > 0) {\n          if(this.state.log.length > 0) {\n            this.setState(prevState => ({\n              log: [...prevState.log, item],\n              personalList: {...prevState.personalList,\n                 [this.state.log.length] : {\n                  name: item, \n                  completion: ''\n                }}\n            }))\n          } else {\n            this.setState({log: [item]})\n            this.setState({personalList: {0 : {\n              name: item, \n              completion: ''\n              }\n            }})\n          }  \n        }      \n      }\n                \n      this.setState({search: ''})\n      document.querySelector('#search').value = ''\n      // console.log(this.state.personalList);      \n    }\n\n    \n  \n    onActive = (e, ver) => {\n\n    let name = e.target.parentNode.previousSibling.innerText\n    let number = this.state.log.indexOf(name)\n    let currentStart = this.state.graphSeg.started\n      let currentFinish = this.state.graphSeg.finish\n      let currentComplete = this.state.graphSeg.complete\n\n    if(ver === 'one') {    \n      \n\n      let test = {name: name,\n          completion: 'started'}\n      let test2 = {\n           started: currentStart + 1,\n           finish: currentFinish,\n           complete: currentComplete\n          }               \n      this.setState(prevState => ({\n      personalList : {\n        ...prevState.personalList,\n        [number] : {\n          name: name,\n          completion: test.completion\n        }        \n      },\n      graphSeg: {\n          started: test2.started,\n          finish: test2.finish,\n          complete: test2.complete\n        }\n    }))\n\n    } else if (ver === 'two') {      \n      this.setState(prevState => ({\n      personalList : {\n        ...prevState.personalList,\n        [number] : {\n          name: name,\n          completion: 'finish'\n        }\n      }\n    }), )\n\n    } else if (ver === 'three') {        \n        this.setState(prevState => ({\n      personalList : {\n        ...prevState.personalList,\n        [number] : {\n          name: name,\n          completion: 'complete'\n        }\n      }\n    }))\n    }      \n      console.log(this.state.personalList, this.state.graphSeg);\n  }\n\n   \n\n  // createGraph = () => {\n  //   let log = this.state.log\n  //   this.setState({graphSeg: {\n  //         started: 0,\n  //         finish: 0,\n  //         complete: 0\n  //       }    \n  //       })\n\n  //   log.forEach(item => { \n\n  //     let number = this.state.log.indexOf(item)\n  //     let completion = this.state.personalList[number].completion\n\n  //     completion === 'started' ? this.setState(prevState => ({graphSeg : { ...prevState.graphSeg, started: prevState.graphSeg.started + 1}})) : \n  //       completion === 'finish' ? this.setState(prevState => ({graphSeg : { ...prevState.graphSeg, finish: prevState.graphSeg.finish + 1}})) :\n  //         completion === 'complete' ? this.setState(prevState => ({graphSeg : { ...prevState.graphSeg, complete: prevState.graphSeg.complete + 1}})) :\n  //         console.log('none');\n \n  //   })    \n  // }\n    \n\n  // componentDidMount() {\n  //   fetch('https://id.twitch.tv/oauth2/token?client_id=oqk1xu4awy8nnm5abfxr8ap86lj1pt&client_secret=ir0i9tsgk0xzobbbngirr1ve0x3xva&grant_type=client_credentials', {method: 'post'})\n  //       .then(res => res.json())\n  //       .then(data => {\n  //         this.setState({authorization: data.access_token})\n  //       })\n\n  //   fetch('https://api.igdb.com/v4/games', {\n  //             method: 'post',\n  //             mode: 'no-cors',\n  //             header: { 'Client ID' : this.state.clientId,\n  //                       'Authorization' : `Bearer ${this.state.authorization}`},\n  //             body: ''\n  //           })\n  //           .then(response => response.json())\n  //           .then(data => console.log(data))    \n  // }\n\n\n    \n\n  render() { \n    return (\n      <div className='App'>\n        <Search onChange={this.onChange} onSearch={this.onSearch}/>\n        <Main pers={this.state.personalList} onActive={this.onActive} createGraph={this.createGraph} items={this.state.log}/>\n        <Graph graphSeg={this.state.graphSeg} />\n      </div>\n\n    );\n  }\n}\n \nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}