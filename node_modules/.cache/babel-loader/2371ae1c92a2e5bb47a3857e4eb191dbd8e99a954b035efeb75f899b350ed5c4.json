{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\robdu\\\\Desktop\\\\port\\\\game-list\\\\src\\\\components\\\\Graph.jsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Graph(_ref) {\n  let {\n    graphSeg\n  } = _ref;\n  function createGraph() {\n    let amount = graphSeg.started + graphSeg.finish + graphSeg.complete;\n    let startPerc = graphSeg.started / amount * 100;\n    let completePerc = 100 - graphSeg.complete / amount * 100;\n    let circStart = graphSeg.started / amount * 360;\n    let circFIn = graphSeg.finish / amount * 360 + circStart;\n    // let circComp = (graphSeg.complete / amount) * 360\n    createLines();\n    // return {background: `conic-gradient(rgb(248, 50, 208) ${circStart}deg, rgb(75, 192, 255) ${circStart}deg ${circFIn} deg,rgb(47, 255, 82) ${circFIn}deg)`}\n    return {\n      background: `linear-gradient(to right, rgb(248, 50, 208) ${startPerc}%, rgb(75, 192, 255) ${startPerc}%, rgb(75, 192, 255) ${completePerc}% ,rgb(47, 255, 82) ${completePerc}%)`\n    };\n  }\n  function createLines() {\n    let amount = graphSeg.started + graphSeg.finish + graphSeg.complete;\n    if (amount > 0) {\n      for (let i = 0; i < amount + 2; i++) {\n        // return(\n        //     <div className='lines'>\n        //       <div className='number'>{i}</div>  \n        //     </div>\n        // )\n        let line = document.createElement('div');\n        line.classList.add('lines');\n        let number = document.createElement('div');\n        number.classList.add('number');\n        line.append(number);\n        let graph = document.getElementsByClassName('graph');\n        graph.append(line);\n      }\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"graph-cont\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"graph\",\n      style: createGraph(),\n      children: createLines()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n}\n_c = Graph;\nvar _c;\n$RefreshReg$(_c, \"Graph\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Graph","_ref","graphSeg","createGraph","amount","started","finish","complete","startPerc","completePerc","circStart","circFIn","createLines","background","i","line","document","createElement","classList","add","number","append","graph","getElementsByClassName","className","children","style","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/robdu/Desktop/port/game-list/src/components/Graph.jsx"],"sourcesContent":["import React from 'react';\r\n\r\nexport default function Graph({graphSeg}) {\r\n    function createGraph() {\r\n        let amount = graphSeg.started + graphSeg.finish + graphSeg.complete\r\n        let startPerc = (graphSeg.started / amount) * 100\r\n        let completePerc = 100 - ((graphSeg.complete / amount) * 100)\r\n\r\n        let circStart = (graphSeg.started / amount) * 360\r\n        let circFIn = ((graphSeg.finish / amount) * 360) + circStart\r\n        // let circComp = (graphSeg.complete / amount) * 360\r\n        createLines()\r\n        // return {background: `conic-gradient(rgb(248, 50, 208) ${circStart}deg, rgb(75, 192, 255) ${circStart}deg ${circFIn} deg,rgb(47, 255, 82) ${circFIn}deg)`}\r\n        return {background: `linear-gradient(to right, rgb(248, 50, 208) ${startPerc}%, rgb(75, 192, 255) ${startPerc}%, rgb(75, 192, 255) ${completePerc}% ,rgb(47, 255, 82) ${completePerc}%)`}\r\n    }\r\n\r\n    function createLines() {\r\n       let amount = graphSeg.started + graphSeg.finish + graphSeg.complete\r\n        if(amount > 0) {\r\n        for (let i = 0; i < amount + 2; i ++) {\r\n        // return(\r\n        //     <div className='lines'>\r\n        //       <div className='number'>{i}</div>  \r\n        //     </div>\r\n        // )\r\n        let line = document.createElement('div')\r\n        line.classList.add('lines')\r\n\r\n        let number = document.createElement('div')\r\n        number.classList.add('number')\r\n\r\n        line.append(number)\r\n\r\n        let graph = document.getElementsByClassName('graph')\r\n        graph.append(line)\r\n        }   \r\n        } \r\n       \r\n    }\r\n\r\n\r\n    return(\r\n        <div className='graph-cont'>\r\n            <div \r\n            className=\"graph\"\r\n            style={createGraph()}\r\n            >\r\n                {createLines()}\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,eAAe,SAASC,KAAKA,CAAAC,IAAA,EAAa;EAAA,IAAZ;IAACC;EAAQ,CAAC,GAAAD,IAAA;EACpC,SAASE,WAAWA,CAAA,EAAG;IACnB,IAAIC,MAAM,GAAGF,QAAQ,CAACG,OAAO,GAAGH,QAAQ,CAACI,MAAM,GAAGJ,QAAQ,CAACK,QAAQ;IACnE,IAAIC,SAAS,GAAIN,QAAQ,CAACG,OAAO,GAAGD,MAAM,GAAI,GAAG;IACjD,IAAIK,YAAY,GAAG,GAAG,GAAKP,QAAQ,CAACK,QAAQ,GAAGH,MAAM,GAAI,GAAI;IAE7D,IAAIM,SAAS,GAAIR,QAAQ,CAACG,OAAO,GAAGD,MAAM,GAAI,GAAG;IACjD,IAAIO,OAAO,GAAKT,QAAQ,CAACI,MAAM,GAAGF,MAAM,GAAI,GAAG,GAAIM,SAAS;IAC5D;IACAE,WAAW,CAAC,CAAC;IACb;IACA,OAAO;MAACC,UAAU,EAAG,+CAA8CL,SAAU,wBAAuBA,SAAU,wBAAuBC,YAAa,uBAAsBA,YAAa;IAAG,CAAC;EAC7L;EAEA,SAASG,WAAWA,CAAA,EAAG;IACpB,IAAIR,MAAM,GAAGF,QAAQ,CAACG,OAAO,GAAGH,QAAQ,CAACI,MAAM,GAAGJ,QAAQ,CAACK,QAAQ;IAClE,IAAGH,MAAM,GAAG,CAAC,EAAE;MACf,KAAK,IAAIU,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGV,MAAM,GAAG,CAAC,EAAEU,CAAC,EAAG,EAAE;QACtC;QACA;QACA;QACA;QACA;QACA,IAAIC,IAAI,GAAGC,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;QACxCF,IAAI,CAACG,SAAS,CAACC,GAAG,CAAC,OAAO,CAAC;QAE3B,IAAIC,MAAM,GAAGJ,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;QAC1CG,MAAM,CAACF,SAAS,CAACC,GAAG,CAAC,QAAQ,CAAC;QAE9BJ,IAAI,CAACM,MAAM,CAACD,MAAM,CAAC;QAEnB,IAAIE,KAAK,GAAGN,QAAQ,CAACO,sBAAsB,CAAC,OAAO,CAAC;QACpDD,KAAK,CAACD,MAAM,CAACN,IAAI,CAAC;MAClB;IACA;EAEJ;EAGA,oBACIhB,OAAA;IAAKyB,SAAS,EAAC,YAAY;IAAAC,QAAA,eACvB1B,OAAA;MACAyB,SAAS,EAAC,OAAO;MACjBE,KAAK,EAAEvB,WAAW,CAAC,CAAE;MAAAsB,QAAA,EAEhBb,WAAW,CAAC;IAAC;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACb;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEL,CAAC;AAEd;AAACC,EAAA,GAlDuB/B,KAAK;AAAA,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}